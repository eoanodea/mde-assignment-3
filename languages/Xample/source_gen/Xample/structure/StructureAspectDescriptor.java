package Xample.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptColumn = createDescriptorForColumn();
  /*package*/ final ConceptDescriptor myConceptConceptHub = createDescriptorForConceptHub();
  /*package*/ final ConceptDescriptor myConceptEntity = createDescriptorForEntity();
  /*package*/ final ConceptDescriptor myConceptPage = createDescriptorForPage();
  /*package*/ final ConceptDescriptor myConceptSystem = createDescriptorForSystem();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptColumn, myConceptConceptHub, myConceptEntity, myConceptPage, myConceptSystem);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Column:
        return myConceptColumn;
      case LanguageConceptSwitch.ConceptHub:
        return myConceptConceptHub;
      case LanguageConceptSwitch.Entity:
        return myConceptEntity;
      case LanguageConceptSwitch.Page:
        return myConceptPage;
      case LanguageConceptSwitch.System:
        return myConceptSystem;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForColumn() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Xample", "Column", 0xb3a9720d85244c66L, 0x8267f2e44e0f706fL, 0x488c7cdcd4cf496fL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:d53b90de-e71c-4418-b1fc-1ff5e893926c(Xample.structure)/5227690555375307119");
    b.version(3);
    b.property("type", 0x488c7cdcd4cf4972L).type(PrimitiveTypeId.STRING).origin("5227690555375307122").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConceptHub() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Xample", "ConceptHub", 0xb3a9720d85244c66L, 0x8267f2e44e0f706fL, 0x488c7cdcd4cfd3a9L);
    b.class_(false, false, false);
    b.origin("r:d53b90de-e71c-4418-b1fc-1ff5e893926c(Xample.structure)/5227690555375342505");
    b.version(3);
    b.associate("column", 0x488c7cdcd4cfd3aaL).target(0xb3a9720d85244c66L, 0x8267f2e44e0f706fL, 0x488c7cdcd4cf496fL).optional(false).origin("5227690555375342506").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEntity() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Xample", "Entity", 0xb3a9720d85244c66L, 0x8267f2e44e0f706fL, 0x488c7cdcd4cf4962L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:d53b90de-e71c-4418-b1fc-1ff5e893926c(Xample.structure)/5227690555375307106");
    b.version(3);
    b.aggregate("columns", 0x488c7cdcd4cf4974L).target(0xb3a9720d85244c66L, 0x8267f2e44e0f706fL, 0x488c7cdcd4cf496fL).optional(false).ordered(true).multiple(true).origin("5227690555375307124").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPage() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Xample", "Page", 0xb3a9720d85244c66L, 0x8267f2e44e0f706fL, 0x488c7cdcd4cf4965L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:d53b90de-e71c-4418-b1fc-1ff5e893926c(Xample.structure)/5227690555375307109");
    b.version(3);
    b.associate("entity", 0x488c7cdcd4cf496dL).target(0xb3a9720d85244c66L, 0x8267f2e44e0f706fL, 0x488c7cdcd4cf4962L).optional(true).origin("5227690555375307117").done();
    b.aggregate("columns", 0x488c7cdcd4cfd3b1L).target(0xb3a9720d85244c66L, 0x8267f2e44e0f706fL, 0x488c7cdcd4cfd3a9L).optional(true).ordered(true).multiple(true).origin("5227690555375342513").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSystem() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Xample", "System", 0xb3a9720d85244c66L, 0x8267f2e44e0f706fL, 0x488c7cdcd4cf495fL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:d53b90de-e71c-4418-b1fc-1ff5e893926c(Xample.structure)/5227690555375307103");
    b.version(3);
    b.aggregate("entities", 0x488c7cdcd4d0eaa4L).target(0xb3a9720d85244c66L, 0x8267f2e44e0f706fL, 0x488c7cdcd4cf4962L).optional(true).ordered(true).multiple(true).origin("5227690555375413924").done();
    b.aggregate("pages", 0x488c7cdcd4cf496aL).target(0xb3a9720d85244c66L, 0x8267f2e44e0f706fL, 0x488c7cdcd4cf4965L).optional(true).ordered(true).multiple(true).origin("5227690555375307114").done();
    return b.create();
  }
}
